data:
  - project: "Nagios Plugins for Linux"
    description: "Nagios and Icinga2 plugins for monitoring Linux hosts"
    icon: "fa fa-fw fa-check-double"
    image: /assets/images/projects-logo-nagios.png
    license: "GPL-3.0 License"
    long-description: "This project implements several Nagios plugins for monitoring Linux hosts. Nagios is an open source computer system monitoring, network monitoring and infrastructure monitoring software application. These plugins have been reported to also work with Icinga and Icinga2."
    main-language: C
    url: https://github.com/madrisan/nagios-plugins-linux

  - project: "HashiCorp Vault Monitoring Tool"
    description: "Monitoring tool for HashiCorp Vault servers and clusters"
    icon: "fa fa-key"
    license: "MPL-2.0 License"
    image: https://raw.githubusercontent.com/madrisan/hashicorp-vault-monitor/master/images/HashiCorp-Vault-Monitor-logo.png
    long-description: "The Go binary <i>hashicorp-vault-monitor</i> monitors the status (unsealed/sealed) of the cluster nodes, the HA cluster status, the installed Vault policies, the access to the Vault KV data store, and the expiration date of a Vault token (directly or via its associated token accessor)."
    main-language: Go
    url: "https://github.com/madrisan/hashicorp-vault-monitor"

  - project: "Keepalived Script for Vault HA"
    description: "Keepalived Tracking Script for HashiCorp Vault High Availability Clusters"
    icon: "fa fa-random"
    license: "GPL-3.0 License"
    long-description: "<p>To avoid a single point of failure with your HashiCorp Vault infrastructure, one would set up Vault in <i>High Availability Mode</i> (HA) with two identical Vault instances (one <i>active</i> and one <i>standby</i>) and use Keepalived to run <i>VRRP</i> between them.</p>The Python3 script <i>vault_ha_active_node.py</i> looks at the environment variable <i>VAULT_ADDR</i> and when set do ask the Vault REST API if the (local) Vault node is the active one. In that case will return 0. The script will return 1 otherwise (<i>VAULT_ADDR</i> unset, vault service not running or running but not <i>unsealed</i>, node in standby mode, a network error). It requires the Python library <i>Requests</i>."
    main-language: Python
    url: https://github.com/madrisan/keepalived-vault-ha

  - project: "Mattermost Notify"
    description: "Post messages to Mattermost via its REST APIv4"
    icon: "fas fa-fw fa-bell"
    image: https://raw.githubusercontent.com/madrisan/go-mattermost-notify/main/images/go-mattermost-notify-logo.png
    license: "Apache-2.0 License"
    long-description: "A simple client for sending Mattermost posts via its REST API v4. This program makes use of the Go libraries <i>http</i> and <i>url</i> for interacting with a Mattermost server and <i>Cobra</i> coupled with <i>Viper</i> to implement the CLI interface."
    main-language: Go
    url: https://github.com/madrisan/go-mattermost-notify

  - project: "HadCRUT5"
    description: "Visualize the HadCRUT5 temperature datasets"
    icon: "fas fa-fw fa-chart-area"
    image: https://raw.githubusercontent.com/madrisan/HadCRUT5/main/plots/HadCRUT5-1880-1920.png
    license: "Apache-2.0 License"
    long-description: "<p>HadCRUT5 is a gridded dataset of global historical surface temperature anomalies relative to a 1961-1990 reference period. The dataset is a collaborative product of the Met Office Hadley Centre and the Climatic Research Unit at the University of East Anglia.</p>The Python script <i>hadcrut5-plot.py</i> parses the HadCRUT5 datasets and plots several graphs. It requires the Python libraries <i>Matplotlib</i>, <i>netCDF4</i>, <i>NumPy</i>, and <i>Requests</i>."
    main-language: "Python"
    url: https://github.com/madrisan/HadCRUT5

  - project: "Dynamic Systems and Chaos"
    description: "Plot logistic/cube/sine orbits, final-state and bifurcation diagrams"
    icon: "fas fa-fw fa-cogs"
    image: https://raw.githubusercontent.com/madrisan/dynamic-systems-and-chaos/master/plots/plot07_le-bifurcation-diagram-le.png
    license: "GPL-3.0 License"
    long-description: "This software has been developed as part of the (optional) homeworks of the MOOC <i>Introduction to Dynamical Systems and Chaos</i>, leaded by David Feldman, Professor of Physics and Mathematics at College of the Atlantic."
    main-language: "Python"
    url: https://github.com/madrisan/dynamic-systems-and-chaos
